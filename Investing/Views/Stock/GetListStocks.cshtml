@model List<Investing.Models.ViewModels.CombinedStocsVM> 

@{
    ViewData["Title"] = "Акции Московской биржи";
}

<h1>Акции Московской биржи</h1>

<table class="table" id="sortTable">
    <thead>
        <tr>
            <th onclick="sortTable(0)">
                Тикер
                <span class="sort-icon">
                    <svg class="asc" viewBox="0 0 24 24" width="12" height="12">
                        <path d="M7 14l5-5 5 5z"></path>
                    </svg>
                    <svg class="desc" viewBox="0 0 24 24" width="12" height="12">
                        <path d="M7 10l5 5 5-5z"></path>
                    </svg>
                </span>
            </th>
            <th onclick="sortTable(1)">
                Название
                <span class="sort-icon">
                    <svg class="asc" viewBox="0 0 24 24" width="12" height="12">
                        <path d="M7 14l5-5 5 5z"></path>
                    </svg>
                    <svg class="desc" viewBox="0 0 24 24" width="12" height="12">
                        <path d="M7 10l5 5 5-5z"></path>
                    </svg>
                </span>
            </th>
            <th onclick="sortTable(2)">
                Цена
                <span class="sort-icon">
                    <svg class="asc" viewBox="0 0 24 24" width="12" height="12">
                        <path d="M7 14l5-5 5 5z"></path>
                    </svg>
                    <svg class="desc" viewBox="0 0 24 24" width="12" height="12">
                        <path d="M7 10l5 5 5-5z"></path>
                    </svg>
                </span>
            </th>
            <th onclick="sortTable(3)">
                Цена
                <span class="sort-icon">
                    <svg class="asc" viewBox="0 0 24 24" width="12" height="12">
                        <path d="M7 14l5-5 5 5z"></path>
                    </svg>
                    <svg class="desc" viewBox="0 0 24 24" width="12" height="12">
                        <path d="M7 10l5 5 5-5z"></path>
                    </svg>
                </span>
            </th>
        </tr>
    </thead>
    <tbody>
         @foreach (var stock in Model)
        {
            <tr style="@(stock.Marketdata?.TRADINGSTATUS == "N" ? "background-color: grey" : "background-color: white;")" onclick="window.location.href='@Url.Action("Details", "Companies", new { id = stock.Security.SECID })'; return false">
                <td>
                    <div class="company-info">
                        <img src="https://img.logo.dev/sberbank.ru" alt="T-Технологии" class="company-logo">
                        <div>
                            <div class="company-name">@stock.Security.SHORTNAME</div>
                            <p class="company-description">@stock.Security.SECID</p>
                        </div>
                    </div>
                </td>
                <td>@stock.Security.SECID</td>
                <cost-difference item="@stock"></cost-difference>
                <td>@(stock.Marketdata?.MARKETPRICE2?.ToString() ?? "-")</td>
                
            </tr>
        } 
    </tbody>
</table>
<style>
    .company-info {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .company-info {
        display: flex;
        align-items: center;
        gap: 10px;
    }
    .company-logo {
        width: 40px;
        height: 40px;
        object-fit: contain;
    }
    table {
        width: 100%;
        border-collapse: collapse;
        margin: 20px 0;
    }
    th, td {
        padding: 12px;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }

    th {
        background-color: #f4f4f4;
        cursor: pointer;
        position: relative;
    }

        th:hover {
            background-color: #ddd;
        }

    tr:hover {
        background-color: #f5f5f5;
    }

    .sort-icon {
        display: inline-flex;
        flex-direction: column;
        margin-left: 8px;
        vertical-align: middle;
    }

        .sort-icon svg {
            fill: #888;
            transition: fill 0.2s;
            width: 12px;
            height: 12px;
        }

        .sort-icon .asc,
        .sort-icon .desc {
            display: none;
        }

    th.asc .sort-icon .asc,
    th.desc .sort-icon .desc {
        display: inline-block;
    }

    th.asc .sort-icon .asc {
        fill: #000;
    }

    th.desc .sort-icon .desc {
        fill: #000;
    }
</style>
<script>
    function sortTable(n) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById("sortTable");
        switching = true;
        dir = "asc";

        // Удаляем классы сортировки у всех заголовков
        Array.from(table.getElementsByTagName("th")).forEach(th => {
            th.classList.remove("asc", "desc");
        });

        // Устанавливаем направление сортировки для текущего столбца
        if (table.getElementsByTagName("th")[n].classList.contains("asc")) {
            dir = "desc";
        } else {
            dir = "asc";
        }

        // Добавляем класс сортировки к текущему заголовку
        table.getElementsByTagName("th")[n].classList.add(dir);

        while (switching) {
            switching = false;
            rows = table.getElementsByTagName("TR");

            for (i = 1; i < (rows.length - 1); i++) {
                shouldSwitch = false;
                x = rows[i].getElementsByTagName("TD")[n];
                y = rows[i + 1].getElementsByTagName("TD")[n];

                if (dir == "asc") {
                    if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                        shouldSwitch = true;
                        break;
                    }
                } else if (dir == "desc") {
                    if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                        shouldSwitch = true;
                        break;
                    }
                }
            }

            if (shouldSwitch) {
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
                switchcount++;
            } else {
                if (switchcount == 0 && dir == "asc") {
                    dir = "desc";
                    switching = true;
                }
            }
        }
    }
</script>